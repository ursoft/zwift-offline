#pragma once
struct RenderTarget { //0xB0 (176) bytes
    char field_0;
    char field_1;
    char field_2;
    char field_3;
    char field_4;
    char field_5;
    char field_6;
    char field_7;
    int m_dw_width;
    int m_dw_height;
    char field_10;
    char field_11;
    char field_12;
    char field_13;
    int m_field_14;
    char m_field_18;
    bool m_isCubeMap;
    uint16_t m_width2;
    uint16_t m_height2;
    char m_mmTexsCnt;
    char field_1F;
    char field_20;
    char field_21;
    char field_22;
    char field_23;
    char field_24;
    char field_25;
    char field_26;
    char field_27;
    char field_28;
    char field_29;
    char field_2A;
    char field_2B;
    char field_2C;
    char field_2D;
    char field_2E;
    char field_2F;
    uint32_t m_fb_30;
    uint32_t m_field_34;
    uint32_t m_tex_38;
    char field_3C;
    char field_3D;
    char field_3E;
    char field_3F;
    uint32_t m_tex_40;
    char field_44;
    char field_45;
    char field_46;
    char field_47;
    uint32_t m_tex_48;
    char field_4C;
    char field_4D;
    char field_4E;
    char field_4F;
    uint32_t m_rb_50;
    char field_54;
    char field_55;
    char field_56;
    char field_57;
    char field_58;
    char field_59;
    char field_5A;
    char field_5B;
    char field_5C;
    char field_5D;
    char field_5E;
    char field_5F;
    GLuint m_tex_60;
    char field_64;
    char field_65;
    char field_66;
    char field_67;
    char field_68;
    char field_69;
    char field_6A;
    char field_6B;
    char field_6C;
    char field_6D;
    char field_6E;
    char field_6F;
    char field_70;
    char field_71;
    char field_72;
    char field_73;
    char field_74;
    char field_75;
    char field_76;
    char field_77;
    uint16_t m_width1;
    uint16_t m_height1;
    uint32_t m_field_7C;
    uint32_t m_field_80;
    uint32_t m_field_84;
    uint32_t m_field_88;
    uint32_t m_field_8C;
    char m_field_90;
    char field_91;
    char m_field_92;
    char m_field_93;
    char m_field_94;
    char field_95;
    char m_field_96;
    char m_field_97;
    char m_field_98;
    char m_field_99;
    char field_9A;
    char m_field_9B;
    char field_9C;
    char field_9D;
    char field_9E;
    char field_9F;
    char field_A0;
    char field_A1;
    char field_A2;
    char field_A3;
    char field_A4;
    char field_A5;
    char field_A6;
    char field_A7;
    const char *m_name;
    RenderTarget(const char *name = nullptr) : m_name(name) {}
};
struct ArtConfig {
    static void LoadArtConfig() { /*TODO*/ }
    static void ReloadIfChanged() { /*TODO*/ }
};

void VRAM_CreateAllRenderTargets();
void VRAM_ReleaseRenderTargetVRAM(RenderTarget *rt);
void GFX_AddPerformanceFlags(uint64_t f);

inline const int g_nShadowMaps = 3; //QUEST: why fourth allocated and not used
inline RenderTarget g_RT_PreviewWindow(""), g_RT_BackBuffer("BackBuffer"), g_RT_ReflectionMap("ReflectionMap"), g_RT_TerrainPickingBuffer("TerrainPickingBuffer"), g_RT_EntityPickingBuffer("EntityPickingBuffer"), 
    g_RT_BackBuffer_Final("BackBuffer_Final"), g_RT_BackBuffer_Temp("BackBuffer_Temp"), g_RT_BackBuffer_Prev("BackBuffer_Prev"), g_RT_CubeMap(""), g_RT_BackBufferVRAM("") /* QUEST: in Android = g_RT_BackBuffer...*/,
    g_RT_SpotlightShadowMap("SpotlightShadowMap"), g_RT_EmptyShadowMap("EmptyShadowMap"), g_RT_Luminance("Luminance"), g_RT_BackBufferDownsamples[10], g_RT_ShadowMaps[4];
inline int BACKBUFFER_WIDTH = 0x500, BACKBUFFER_HEIGHT = 0x2D0, SHADOWMAP_WIDTH = 0x800, SHADOWMAP_HEIGHT = 0x800, LUMINANCE_WIDTH = 0xF0, LUMINANCE_HEIGHT = 0x87, ENVCUBEMAP_SIZE = 0x80;
